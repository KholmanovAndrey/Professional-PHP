<?php

// 5. Дан код:
//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//$a1 = new A();
//$a2 = new A();
//$a1->foo(); // 1 - увеличение переменной x на 1
//$a2->foo(); // 2 - x увеличение еще на 1 = 2, так как x статическое свойство - значит принадлежит классу, а не объекту
//$a1->foo(); // 3 - тоже самое = 3
//$a2->foo(); // 4 - тоже самое = 4
// Что он выведет на каждом шаге? Почему?


// 6. Немного изменим п.5:
//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//class B extends A {
//}
//$a1 = new A();
//$b1 = new B();
//$a1->foo(); // 1 - увеличение переменной x на 1 = 1
//$b1->foo(); // 1 - увеличение переменной x на 1 = 1, так как созданны два разных класса, то и x разные
//$a1->foo(); // 2 - увеличение переменной x на 1 = 2, по классу A
//$b1->foo(); // 2 - увеличение переменной x на 1 = 2, по классу B
// Объясните результаты в этом случае.


// 7. *Дан код:
//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//class B extends A {
//}
//$a1 = new A;
//$b1 = new B;
//$a1->foo(); // 1 - увеличение переменной x на 1 = 1
//$b1->foo(); // 1 - увеличение переменной x на 1 = 1, так как созданны два разных класса, то и x разные
//$a1->foo(); // 2 - увеличение переменной x на 1 = 2, по классу A
//$b1->foo(); // 2 - увеличение переменной x на 1 = 2, по классу B
// Что он выведет на каждом шаге? Почему?